name: Build and push Docker image

on:
  push:
    branches:
      - main

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # https://github.com/aws-actions/configure-aws-credentials (Community) 
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # https://github.com/aws-actions/amazon-ecr-login (Community)
      - name: "Login To Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # In this section, we are Preparing Docker images  and push AWS ECR 
      - name: "Prepare Docker Images and push to Amazon ECR"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          UTILS_SECRET: ${{ secrets.UTILS_SECRET }}
          NODE_ENV: "production"
          AWS_REGION: "us-east-1"
          AWS_S3_ACCELERATE_URL: ${{ secrets.AWS_S3_ACCELERATE_URL }}
          AWS_S3_UPLOAD_BUCKET_URL: ${{ secrets.AWS_S3_UPLOAD_BUCKET_URL }}
          AWS_S3_UPLOAD_BUCKET_NAME: ${{ secrets.AWS_S3_UPLOAD_BUCKET_NAME }}
          AWS_S3_UPLOAD_MAX_SIZE: "26214400"
          AWS_S3_FORCE_PATH_STYLE: "true"
          AWS_S3_ACL: "private"
          REDIS_URL: ${{ secrets.REDIS_URL }}
          URL: "notes.6ix.com"
          PORT: "3000"
          PGSSLMODE: "disable"
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: outline
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          echo $DATABASE_URL && docker build -f Dockerfile --no-cache \
          --build-arg DATABASE_URL=$DATABASE_URL \
          --build-arg SECRET_KEY=$SECRET_KEY \
          --build-arg NODE_ENV=$NODE_ENV \
          --build-arg UTILS_SECRET=$UTILS_SECRET \
          --build-arg AWS_REGION=$AWS_REGION \
          --build-arg AWS_S3_ACCELERATE_URL=$AWS_S3_ACCELERATE_URL \
          --build-arg AWS_S3_UPLOAD_BUCKET_URL=$AWS_S3_UPLOAD_BUCKET_URL \
          --build-arg AWS_S3_UPLOAD_BUCKET_NAME=$AWS_S3_UPLOAD_BUCKET_NAME \
          --build-arg AWS_S3_UPLOAD_MAX_SIZE=$AWS_S3_UPLOAD_MAX_SIZE \
          --build-arg AWS_S3_FORCE_PATH_STYLE=$AWS_S3_FORCE_PATH_STYLE \
          --build-arg AWS_S3_ACL=$AWS_S3_ACL \
          --build-arg REDIS_URL=$REDIS_URL \
          --build-arg URL=$URL \
          --build-arg PORT=$PORT \
          --build-arg PGSSLMODE=$PGSSLMODE \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker rmi $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


      # Deployment: we are using helm for deployment on kubernetes, Helm are custom build by DevOps 
      - name: 'Application Deployment Using Helm'
        id: helm-deployment
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          UTILS_SECRET: ${{ secrets.UTILS_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ACCELERATE_URL: ${{ secrets.AWS_S3_ACCELERATE_URL }}
          AWS_S3_UPLOAD_BUCKET_URL: ${{ secrets.AWS_S3_UPLOAD_BUCKET_URL }}
          AWS_S3_UPLOAD_BUCKET_NAME: ${{ secrets.AWS_S3_UPLOAD_BUCKET_NAME }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          IMAGE_TAG: ${{ github.run_id }} 
          
        run: |
          aws eks --region us-east-1 update-kubeconfig --name production-posthog-eks-cluster
          export KUBECONFIG=~/.kube/config
          helm upgrade --install --atomic \
           --set image.tag=$IMAGE_TAG \
           --set env_secret.DATABASE_URL=$DATABASE_URL \
           --set env_secret.SECRET_KEY=$SECRET_KEY \
           --set env_secret.UTILS_SECRET=$UTILS_SECRET \
           --set env_secret.AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --set env_secret.AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
           --set env_secret.AWS_S3_UPLOAD_BUCKET_NAME=$AWS_S3_UPLOAD_BUCKET_NAME --set env_secret.AWS_S3_UPLOAD_BUCKET_URL=$AWS_S3_UPLOAD_BUCKET_URL --set env_secret.AWS_S3_ACCELERATE_URL=$AWS_S3_ACCELERATE_URL \
           --set env_secret.REDIS_URL=$REDIS_URL \
           --namespace=outline -f ./_infra/k8s/outline/config/prod.yaml outline ./_infra/k8s/outline --wait --history-max 4 --timeout 1000s --debug 

