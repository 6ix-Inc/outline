apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outline.fullname" . }}
  labels:
    {{- include "outline.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "outline.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "outline.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "outline.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: DATABASE_URL
              value:  {{ .Values.env_secret.DATABASE_URL }}
            - name: NODE_ENV
              value:  "production"
            - name: SECRET_KEY
              value:  {{ .Values.env_secret.UTILS_SECRET }}
            - name: UTILS_SECRET
              value:  {{ .Values.env_secret.UTILS_SECRET }}
            - name: AWS_ACCESS_KEY_ID
              value:  {{ .Values.env_secret.AWS_ACCESS_KEY_ID }}
            - name: AWS_SECRET_ACCESS_KEY
              value:  {{ .Values.env_secret.AWS_SECRET_ACCESS_KEY }}
            - name: AWS_REGION
              value:  "us-east-1"
            - name: AWS_S3_ACCELERATE_URL
              value:  {{ .Values.env_secret.AWS_S3_ACCELERATE_URL }}
            - name: AWS_S3_UPLOAD_BUCKET_URL
              value:  {{ .Values.env_secret.AWS_S3_UPLOAD_BUCKET_URL }}
            - name: AWS_S3_UPLOAD_BUCKET_NAME
              value:  {{ .Values.env_secret.AWS_S3_UPLOAD_BUCKET_NAME }}
            - name: AWS_S3_UPLOAD_MAX_SIZE
              value:  "26214400"
            - name: AWS_S3_FORCE_PATH_STYLE
              value: "true"
            - name: AWS_S3_ACL
              value:  "private"
            - name: REDIS_URL
              value:  {{ .Values.env_secret.REDIS_URL }}
            - name: SAML_SSO_ENDPOINT
              value:  {{ .Values.env_secret.SAML_SSO_ENDPOINT }}
            - name: SAML_CERT
              value:  {{ .Values.env_secret.SAML_CERT }}
            - name: OIDC_CLIENT_ID
              value:  {{ .Values.env_secret.OIDC_CLIENT_ID }}
            - name: OIDC_CLIENT_SECRET
              value:  {{ .Values.env_secret.OIDC_CLIENT_SECRET }}
            - name: OIDC_AUTH_URI
              value:  {{ .Values.env_secret.OIDC_AUTH_URI }}
            - name: OIDC_TOKEN_URI
              value:  {{ .Values.env_secret.OIDC_TOKEN_URI }}
            - name: OIDC_USERINFO_URI
              value:  {{ .Values.env_secret.OIDC_USERINFO_URI }}
            - name: OIDC_USERNAME_CLAIM
              value:  "email"
            - name: OIDC_DISPLAY_NAME
              value:  "Auth0"
            - name: OIDC_SCOPES
              value:  {{ .Values.env_secret.OIDC_SCOPES }}
            - name: URL
              value:  "https://notes.6ix.com"
            - name: PORT
              value:  "3000"
            - name: PGSSLMODE
              value:  "disable"

          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   periodSeconds: 30
          #   successThreshold: 1
          #   timeoutSeconds: 3
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   periodSeconds: 30
          #   successThreshold: 1
          #   timeoutSeconds: 3
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "export OIDC_SCOPE='openid profile email'"]              
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
